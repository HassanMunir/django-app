name: DJANGO CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies & Check for outdated dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-review
          pip-review --auto
          pip install -r requirements.txt

      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os}}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Run Bandit for SAST
        run: |
          bandit -r app -c bandit.yaml

      - name: Run Flake8 & Black Code Formatter
        run: |
          flake8 myapp
          black myapp

      - name: List files in the repository
        run: |
          echo "Listing files in the repository:"
          ls -R

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Set Django settings module
        run: echo "DJANGO_SETTINGS_MODULE=djangoapp.settings" >> $GITHUB_ENV

      - name: Run pytest
        run: |
          pytest myapp/tests --maxfail=1 --cov=myapp --disable-warnings --verbose

      - name: Run pytest with coverage
        run: |
          coverage run -m pytest
          coverage report
          coverage html

      - name: Run myPy for Type Checking and verify Installed Packages
        run: |
          mypy myapp
          pip list

  docker-build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Image Tags
        run: |
          echo "IMAGE_TAG=ghcr.io/intrastellarltd/django-app-ci-pipeline:${{ github.sha }}" >> $GITHUB_ENV
          echo "IMAGE_TAG_LATEST=ghcr.io/intrastellarltd/django-app-ci-pipeline:latest" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_TAG -t $IMAGE_TAG_LATEST .

      - name: Scan image
        uses: anchore/scan-action@v6
        with:
          image: "ghcr.io/intrastellarltd/django-app-ci-pipeline:latest"
          fail-build: false
  
      - uses: anchore/sbom-action@v0
        with:
          image: "ghcr.io/intrastellarltd/django-app-ci-pipeline:latest"

      - name: Push Docker Image to GHCR
        run: |
          docker push $IMAGE_TAG
          docker push $IMAGE_TAG_LATEST
